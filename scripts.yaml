let_light_blink:
  alias: Let ceiling light in kitchen blink
  mode: restart
  variables:
    blink_timeout: 1
    light_entity_id: 'light.kitchen_ceiling_light'
    observed_input_boolean: 'input_boolean.fride_door_was_left_open'
  sequence:
    repeat:
      while:
        - condition: template
          value_template: "{{ is_state(observed_input_boolean, 'on') }}"
      sequence:
        - service: light.turn_on
          data_template:
            entity_id: "{{ light_entity_id }}"
        - delay: "{{ blink_timeout }}"
        - service: light.turn_off
          data_template:
            entity_id: "{{ light_entity_id }}"
        - delay: "{{ blink_timeout }}"

toggle_light_scene:
  alias: Notify smart button pressed
  variables:
    light_group_id: ''
    scene_input_select_id: ''
  sequence:
    choose: 
      - conditions:
          condition: template
          value_template: "{{ is_state(light_group_id, 'on') }}"
        sequence:
          service: light.turn_off
          data_template:
            entity_id: "{{ light_group_id }}"
      - conditions:
          condition: template
          value_template: "{{ is_state(light_group_id, 'off') }}"
        sequence:
          - service: scene.turn_on
            data_template:
              entity_id: "{{ states(scene_input_select_id) }}"

notify_smart_button_pressed:
  alias: Notify smart button pressed
  variables:
    smart_button_id: ''
  sequence:
    - wait_template: "{{ is_state(smart_button_id, 'release') }}"
      timeout:
        milliseconds: 300
    - choose:
      - conditions:
        - condition: template
          value_template: "{{ not wait.completed }}"
        sequence:
          - wait_template: "{{ is_state(smart_button_id, 'hold') }}"
            timeout:
              milliseconds: 600
          - choose:
            - conditions:
              - condition: template
                value_template: "{{ not wait.completed }}"
              sequence:
                  - event: SMART_HOME_BUTTON_PRESS
                    event_data:
                      entity_id: "{{ smart_button_id }}"
            - conditions:
              - condition: template
                value_template: "{{ wait.completed }}"
              sequence:
                  - event: SMART_HOME_BUTTON_HOLD
                    event_data:
                      entity_id: "{{ smart_button_id }}"
      - conditions:
        - condition: template
          value_template: "{{ wait.completed }}"
        sequence:
          - event: SMART_HOME_BUTTON_RELEASE
            event_data:
              entity_id: "{{ smart_button_id }}"
  